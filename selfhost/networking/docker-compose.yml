version: '3'

services:
  npm:
    hostname: npm
    container_name: nginx-proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - /selfhost-data/networking/nginx-proxy-manager/data:/data
      - /selfhost-data/networking/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    networks:
      - nginx-network

  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "82:80/tcp"
  #   environment:
  #   - TZ=${TZ}
  #   - TZ=${PIHOLE_PWD}
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - '/selfhost-data/networking/etc-pihole:/etc/pihole'
  #     - '/selfhost-data/networking/etc-dnsmasq.d:/etc/dnsmasq.d'
  #   #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #   restart: unless-stopped
  #   networks:
  #     - nginx-network    

  # fail2ban:
  #   image: crazymax/fail2ban:latest
  #   container_name: fail2ban
  #   network_mode: "host"
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   volumes:
  #     - "/selfhost-data/networking/fail2ban/data:/data"
  #     - "/selfhost-data/networking/fail2ban/var/log/auth.log:/var/log/auth.log:ro"
  #     - "/selfhost-data/networking/nginx-proxy-manager/data/logs/:/log/npm/:ro"
  #   restart: always
  #   environment:
  #   - TZ=${TZ}
  #   - F2B_LOG_TARGET=STDOUT
  #   - F2B_LOG_LEVEL=INFO
  #   - F2B_DB_PURGE_AGE=1d
  #   networks:
  #     - nginx-network    

networks:
  nginx-network:
    external: true
    